import { db } from "@/app/lib/db";
import { NextRequest, NextResponse } from "next/server";
import authRequired from "../auth/authRequired";

export async function GET(request: NextRequest) {
  try {
    // Auth required
    await authRequired();

    // Access query parameters
    const query = request.nextUrl.searchParams;
    const userUID = query.get("userUID");

    if (!userUID) {
      throw new Error("No user UID");
    }

    const user = await db.utilisateurs.findFirst({
      where: {
        uid_firebase: userUID,
      },
    });

    const exploitationsByAccesUtilisateur = await db.acces_utilisateur.findMany(
      {
        include: {
          Exploitations: true,
        },
      }
    );

    if (exploitationsByAccesUtilisateur.length === 0) {
      throw new Error("There're no user's exploitations in database");
    }

    const exploitations = exploitationsByAccesUtilisateur
      .filter(exploitation => exploitation.id_utilisateur === user?.id)
      .map(exploitation => ({
        id: exploitation.Exploitations?.id,
        nom: exploitation.Exploitations?.nom,
      }));

    return NextResponse.json(exploitations, { status: 200 });
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (error: any) {
    console.error("Error fetching exploitations:", error);

    if (error && error.message === "Not authorized") {
      return NextResponse.json({ message: "Not authorized" }, { status: 401 });
    }

    return NextResponse.json(
      { error, message: "Failed to fetch exploitations" },
      { status: 500 }
    );
  }
}
